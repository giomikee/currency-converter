{"version":3,"sources":["components/Header.js","components/Footer.js","constants/index.js","components/ConversionRate.js","components/ConversionResult.js","components/CurrencyForm.js","components/CurrencyAPI.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","Row","Col","sm","Footer","className","href","target","rel","API_PREFIX","CONVERSION_RATES_STORAGE","roundDecimal","amount","Math","round","ConversionRate","rate","base","roundedRate","Card","bg","text","Body","Text","result","roundedResult","showCurrencies","currencies","keyPrefix","map","currency","value","key","CurrencyForm","props","handleChange","event","setState","name","state","fetchConversion","preventDefault","storageKey","fetch","getConversionApiUrl","then","res","json","data","rates","catch","error","this","Form","onSubmit","Group","as","controlId","Label","Control","required","type","placeholder","onChange","Alert","variant","message","Component","CurrencyAPI","Object","keys","content","length","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.313442f8.chunk.js","sourcesContent":["/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nexport default function Header() {\n\treturn (\n\t\t<Row>\n\t\t\t<Col sm='12'>\n\t\t\t\t<header>\n\t\t\t\t\t<h1>\n                Currency Converter\n\t\t\t\t\t</h1>\n\t\t\t\t</header>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nexport default function Footer() {\n\treturn (\n\t\t<Row>\n\t\t\t<Col sm='12'>\n\t\t\t\t<footer className='fixed-bottom'>\n\t\t\t\t\t<p className='font-italic font-weight-light'>\n                        Currency rates provided by &nbsp;\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://exchangeratesapi.io/'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n                                Exchange Rates API\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</footer>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n","/*\n * Created on Fri Mar 20 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nexport const API_PREFIX = 'https://api.exchangeratesapi.io/latest';\nexport const CONVERSION_RATES_STORAGE = {};\n\nexport const roundDecimal = amount => Math.round(amount * 100) / 100; // eslint-disable-line no-magic-numbers\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { roundDecimal } from '../constants';\n\nexport default function ConversionRate({ rate, base, target }) {\n\tconst roundedRate = roundDecimal(rate);\n\n\treturn (\n\t\t<Card bg='info' text='white'>\n\t\t\t<Card.Header>Conversion Rate</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Text>\n                    1 {base} = {roundedRate} {target}\n\t\t\t\t</Card.Text>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { roundDecimal } from '../constants';\n\nexport default function ConversionRate({ result, target }) {\n\tconst roundedResult = roundDecimal(result);\n\n\treturn (\n\t\t<Card bg='success' text='white'>\n\t\t\t<Card.Header>Conversion Result</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Text>\n\t\t\t\t\t{roundedResult} {target}\n\t\t\t\t</Card.Text>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React, { Component } from 'react';\nimport { API_PREFIX, CONVERSION_RATES_STORAGE } from '../constants';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row, Alert } from 'react-bootstrap';\nimport ConversionRate from './ConversionRate';\nimport ConversionResult from './ConversionResult';\n\nconst getConversionApiUrl = (base, target) => `${API_PREFIX}?base=${base}&symbols=${target}`;\n\nconst showCurrencies = (currencies, keyPrefix) =>\n\tcurrencies.map(currency => <option value={currency} key={`${keyPrefix}${currency}`}>{currency}</option>);\n\nexport default class CurrencyForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tamount: '',\n\t\t\tbase: '',\n\t\t\ttarget: '',\n\t\t\trate: null,\n\t\t\tresult: null,\n\t\t\terror: null\n\t\t};\n\t}\n\thandleChange = event => {\n\t\tthis.setState(\n\t\t\t{ [event.target.name]: event.target.value },\n\t\t\t() => {\n\t\t\t\tconst { base, target, amount } = this.state;\n\n\t\t\t\tbase && target && amount && this.fetchConversion();\n\t\t\t}\n\t\t);\n\t}\n\tfetchConversion = event => {\n\t\tevent && event.preventDefault();\n\n\t\tconst { base, target, amount } = this.state;\n\t\tconst storageKey = `${base}-${target}`;\n\t\tlet rate,\n\t\t\tresult;\n\n\t\tif (CONVERSION_RATES_STORAGE[storageKey]) {\n\t\t\trate = CONVERSION_RATES_STORAGE[storageKey];\n\t\t\tresult = amount * CONVERSION_RATES_STORAGE[storageKey];\n\n\t\t\tthis.setState({ rate, result });\n\t\t} else {\n\t\t\tfetch(getConversionApiUrl(base, target))\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\trate = data.rates[target];\n\t\t\t\t\tresult = amount * rate;\n\t\t\t\t\tCONVERSION_RATES_STORAGE[storageKey] = rate;\n\n\t\t\t\t\tthis.setState({ rate, result });\n\t\t\t\t})\n\t\t\t\t.catch(error => this.setState({ error }));\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { currencies } = this.props,\n\t\t\t{ amount, base, target, rate, result, error } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Form onSubmit={this.fetchConversion} className='border border-info rounded'>\n\t\t\t\t\t<Form.Row className='p-sm-2'>\n\t\t\t\t\t\t<Form.Group as={Col} sm='3' controlId='amount'>\n\t\t\t\t\t\t\t<Form.Label>Amount to convert:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tname='amount'\n\t\t\t\t\t\t\t\tplaceholder='Amount to convert'\n\t\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={Col} sm='3' controlId='base'>\n\t\t\t\t\t\t\t<Form.Label>Currency base:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\tname='base'\n\t\t\t\t\t\t\t\tvalue={base}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}>\n\t\t\t\t\t\t\t\t<option value=''></option>\n\t\t\t\t\t\t\t\t{showCurrencies(currencies, 'base')}\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={Col} sm='6' controlId='target'>\n\t\t\t\t\t\t\t<Form.Label>Convert to:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\tname='target'\n\t\t\t\t\t\t\t\tvalue={target}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}>\n\t\t\t\t\t\t\t\t<option value=''></option>\n\t\t\t\t\t\t\t\t{showCurrencies(currencies, 'target')}\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\t\t\t\t</Form>\n\t\t\t\t<Row className='p-sm-2'>\n\t\t\t\t\t{\n\t\t\t\t\t\terror ?\n\t\t\t\t\t\t\t<Col sm='12'>\n\t\t\t\t\t\t\t\t<Alert variant='danger'>\n\t\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t: result &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col sm='6'>\n\t\t\t\t\t\t\t\t\t<ConversionRate rate={rate} base={base} target={target} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm='6'>\n\t\t\t\t\t\t\t\t\t<ConversionResult result={result} target={target} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</Row>\n\t\t\t</>\n\t\t);\n\t}\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React, { Component } from 'react';\nimport { API_PREFIX } from '../constants';\nimport CurrencyForm from './CurrencyForm';\n\nexport default class CurrencyAPI extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrencies: [],\n\t\t\terror: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(API_PREFIX)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => this.setState(\n\t\t\t\t{ currencies: [data.base, ...Object.keys(data.rates)] }\n\t\t\t))\n\t\t\t.catch(error => this.setState({ error }));\n\t}\n\trender() {\n\t\tconst { currencies, error } = this.state;\n\t\tlet content;\n\n\t\tif (error) {\n\t\t\tcontent = error.message;\n\t\t} else if (currencies.length === 0) {\n\t\t\tcontent = 'Loading...';\n\t\t} else {\n\t\t\tcontent = <CurrencyForm currencies={currencies} />;\n\t\t}\n\n\t\treturn <>{content}</>;\n\t}\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport '../styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport Header from './Header';\nimport Footer from './Footer';\nimport CurrencyAPI from './CurrencyAPI';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Header />\n\t\t\t\t<CurrencyAPI />\n\t\t\t\t<Footer />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Created on Sat Apr 04 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}